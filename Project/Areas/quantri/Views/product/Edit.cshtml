@model Project.Models.product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/quantri/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    th, td {
        text-align: center;
    }

        td p {
            height: 50px;
            overflow-y: hidden;
            text-overflow: ellipsis;
        }
</style>
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Edit News
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                @using (Html.BeginForm("Edit", "product", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>product</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.Label("Danh Mục", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.categoryid, (SelectList)ViewBag.category, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.categoryid, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @Html.HiddenFor(model => model.id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Hình đại diện", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                <input type="file" name="img" id="img" accept=".jpg,.png,.gif,.jpeg,.bmp" />
                            </div>
                            <div class="col-md-4">
                                <img src="~/Content/upload/img/news/@Model.img" width="100%" />
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Mô Tả", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.description)
                                @Html.ValidationMessageFor(model => model.description, "", new { @class = "texst-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.meta, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.size, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.size, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.size, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.color, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.color, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.color, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Hiển Thị", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @{
                                    bool hide = (Model.hdie.GetValueOrDefault(false) ? true : false);
                                }
                                @Html.CheckBoxFor(model => hide)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.order, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-1">
                                @Html.EditorFor(model => model.order, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.order, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.datebegin, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.datebegin, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.datebegin, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.categoryid, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-1">
                                @Html.EditorFor(model => model.categoryid, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.categoryid, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Lưu" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Quay Lại", "Index")
                </div>
            </div>
        </div>
    </div>
</div>

@section _Footer
{
    <script src="~/Areas/quantri/Content/ckfinder/ckfinder.js"></script>
    <script src="~/Areas/quantri/Content/ckeditor/ckeditor.js"></script>

    <script type="text/javascript">
        var editor = CKEDITOR.replace("description");
        var editor = CKEDITOR.replace("description", { height: '600px' });
        customConfig: '/Areas/quantri/Content/ckeditor/config.js';
    </script>

}